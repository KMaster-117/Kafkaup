version: '3'

services:
  kafka:
    image: confluentinc/cp-kafka:${CONFLUENT_VERSION}
    depends_on:
      - zookeeper
    ports:
      - ${KAFKA_PORT}:9092
      - ${KAFKA_LOCALHOST_PORT}:9093
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,PLAINTEXT://0.0.0.0:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,PLAINTEXT://10.0.1.133:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_MESSAGE_MAX_BYTES: 10485760
      KAFKA_SOCKET_REQUEST_MAX_BYTES: 100001200
    volumes:
      - ./kafka-data:/var/lib/kafka/data

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    depends_on:
      - kafka
    ports:
      - ${KAFDROP_PORT}:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:9092

  zookeeper:
    image: zookeeper:${ZK_VERSION}
    ports:
      - ${ZK_PORT}:2181
    restart: always
    volumes:
      - ./zk-data:/var/lib/zookeeper/data \
      - ./zk-txn-logs:/var/lib/zookeeper/log \

  kafka-actualizer:
    image: confluentinc/cp-kafka:${CONFLUENT_VERSION}
    depends_on:
      - kafka
    volumes:
      - ./kafka/docker/wait-for-it.sh:/wait-for-it.sh
    command: |
      bash -c '/wait-for-it.sh --timeout=0 -s kafka:9092 && \
      kafka-topics --create --if-not-exists --topic vse.src-data --partitions 8 --replication-factor 1 --zookeeper zookeeper:2181 && \
      kafka-topics --create --if-not-exists --topic processed-data --partitions 8 --replication-factor 1 --zookeeper zookeeper:2181 && \
      kafka-topics --create --if-not-exists --topic aggregated-data --partitions 8 --replication-factor 1 --zookeeper zookeeper:2181 && \
      exit 0'
    environment:
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored

  redis:
    image: redis:latest
    restart: always
    user: root
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - ./kafka/redis/redis.conf:/etc/redis/redis.conf
      - ./redis-data:/data
    command: redis-server /etc/redis/redis.conf

  vernemq:
    image: erlio/docker-vernemq
    restart: always
    environment:
      - DOCKER_VERNEMQ_ALLOW_ANONYMOUS=on
      - DOCKER_VERNEMQ_MAX_INFLIGHT_MESSAGES=0
      - DOCKER_VERNEMQ_MAX_ONLINE_MESSAGES=-1
      - DOCKER_VERNEMQ_ACCEPT_EULA=yes
    ports:
      - ${MQTT_PORT}:1883
      - 8888:8888
    volumes:
      - ./kafka/vernemq/vmq.acl:/etc/vernemq/vmq.acl
